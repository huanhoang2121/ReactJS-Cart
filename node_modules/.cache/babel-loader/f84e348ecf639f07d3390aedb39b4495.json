{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/shoping-cart/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Carts from \"./../components/Carts\";\nimport Cart from \"./../components/CartItem\";\nimport PropTypes from \"prop-types\";\n\nclass CartContainer extends Component {\n  render() {\n    var cart = this.props.cart;\n    console.log(cart);\n    return React.createElement(Carts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.showCart(cart));\n  }\n\n  showProduct(cart) {\n    var result = null;\n\n    if (cart.length > 0) {\n      result = cart.map((product, index) => {\n        return React.createElement(Cart, {\n          key: index,\n          product: product,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      });\n    }\n\n    return result;\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nexport default connect(mapStateToProps, null)(CartContainer);","map":{"version":3,"sources":["/home/dev/Documents/shoping-cart/src/containers/CartContainer.js"],"names":["React","Component","connect","Carts","Cart","PropTypes","CartContainer","render","cart","props","console","log","showCart","showProduct","result","length","map","product","index","propTypes","arrayOf","shape","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAClCM,EAAAA,MAAM,GAAG;AAAA,QACCC,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAELE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKI,QAAL,CAAcJ,IAAd,CADL,CADJ;AAKH;;AACDK,EAAAA,WAAW,CAACL,IAAD,EAAO;AACd,QAAIM,MAAM,GAAG,IAAb;;AACA,QAAIN,IAAI,CAACO,MAAL,GAAc,CAAlB,EAAqB;AACjBD,MAAAA,MAAM,GAAGN,IAAI,CAACQ,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAClC,eAAO,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAkB,UAAA,OAAO,EAAED,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFQ,CAAT;AAGH;;AACD,WAAOH,MAAP;AACH;;AAlBiC;;AAqBtCR,aAAa,CAACa,SAAd,GAA0B;AACtBX,EAAAA,IAAI,EAAEH,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,KAAV,CAAgB;AACpCJ,IAAAA,OAAO,EAAEZ,SAAS,CAACgB,KAAV,CAAgB;AACrBC,MAAAA,EAAE,EAAGjB,SAAS,CAACkB,MAAV,CAAiBC,UADD;AAErBC,MAAAA,IAAI,EAAGpB,SAAS,CAACqB,MAAV,CAAiBF,UAFH;AAGrBG,MAAAA,KAAK,EAAGtB,SAAS,CAACqB,MAAV,CAAiBF,UAHJ;AAIrBI,MAAAA,WAAW,EAAEvB,SAAS,CAACqB,MAAV,CAAiBF,UAJT;AAKrBK,MAAAA,KAAK,EAAGxB,SAAS,CAACkB,MAAV,CAAiBC,UALJ;AAMrBM,MAAAA,SAAS,EAAGzB,SAAS,CAACkB,MAAV,CAAiBC,UANR;AAOrBO,MAAAA,MAAM,EAAG1B,SAAS,CAACkB,MAAV,CAAiBC;AAPL,KAAhB,EAQNA,UATiC;AAUpCQ,IAAAA,QAAQ,EAAE3B,SAAS,CAACkB,MAAV,CAAiBC;AAVS,GAAhB,CAAlB,EAWFA;AAZkB,CAA1B;;AAeA,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH1B,IAAAA,IAAI,EAAE0B,KAAK,CAAC1B;AADT,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAAC+B,eAAD,EAAkB,IAAlB,CAAP,CAA+B3B,aAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Carts from \"./../components/Carts\";\nimport Cart from \"./../components/CartItem\";\nimport PropTypes from \"prop-types\";\n\nclass CartContainer extends Component {\n    render() {\n        var { cart } = this.props;\n        console.log(cart);\n        return (\n            <Carts>\n                {this.showCart(cart)}\n            </Carts>\n        );\n    }\n    showProduct(cart) {\n        var result = null;\n        if (cart.length > 0) {\n            result = cart.map((product, index) => {\n                return <Cart key={index} product={product}/>\n            });\n        }\n        return result;\n    }\n}\n\nCartContainer.propTypes = {\n    cart: PropTypes.arrayOf(PropTypes.shape({\n        product: PropTypes.shape({\n            id : PropTypes.number.isRequired,\n            name : PropTypes.string.isRequired,\n            image : PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            price : PropTypes.number.isRequired,\n            inventory : PropTypes.number.isRequired,\n            rating : PropTypes.number.isRequired    \n        }).isRequired,\n        quantity: PropTypes.number.isRequired\n    })).isRequired\n}\n\nconst mapStateToProps = state => {\n    return {\n        cart: state.cart\n    }\n}\n\nexport default connect(mapStateToProps, null)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}