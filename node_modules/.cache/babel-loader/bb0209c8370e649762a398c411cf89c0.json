{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/shoping-cart/src/containers/ProductContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Products from \"./../components/Products\";\nimport Product from \"./../components/Product\";\nimport PropTypes from \"prop-types\";\nimport { actAddToCart } from \"./../actions/index\";\n\nclass ProductContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showProduct = products => {\n      var result = null;\n\n      if (products.length > 0) {\n        result = products.map((product, index) => {\n          return React.createElement(Product, {\n            key: index,\n            product: product,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          });\n        });\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    var products = this.props.products;\n    return React.createElement(Products, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.showProduct(products));\n  }\n\n}\n\nProductContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired,\n    rating: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = (dispatch, product) => {\n  return {\n    onAddToCart: product => {\n      dispatch(actAddToCart(product, 1));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductContainer);","map":{"version":3,"sources":["/home/dev/Documents/shoping-cart/src/containers/ProductContainer.js"],"names":["React","Component","connect","Products","Product","PropTypes","actAddToCart","ProductContainer","showProduct","products","result","length","map","product","index","render","props","propTypes","arrayOf","shape","id","number","isRequired","name","string","image","description","price","inventory","rating","mapStateToProps","state","mapDispatchToProps","dispatch","onAddToCart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SASrCO,WATqC,GAStBC,QAAD,IAAc;AACxB,UAAIC,MAAM,GAAG,IAAb;;AACA,UAAID,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;AACrBD,QAAAA,MAAM,GAAGD,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACtC,iBAAO,oBAAC,OAAD;AAAS,YAAA,GAAG,EAAEA,KAAd;AAAqB,YAAA,OAAO,EAAED,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,SAFQ,CAAT;AAGH;;AACD,aAAOH,MAAP;AACH,KAjBoC;AAAA;;AACrCK,EAAAA,MAAM,GAAG;AAAA,QACCN,QADD,GACc,KAAKO,KADnB,CACCP,QADD;AAEL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,WAAL,CAAiBC,QAAjB,CADL,CADJ;AAKH;;AARoC;;AAoBzCF,gBAAgB,CAACU,SAAjB,GAA6B;AACzBR,EAAAA,QAAQ,EAAGJ,SAAS,CAACa,OAAV,CACPb,SAAS,CAACc,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAGf,SAAS,CAACgB,MAAV,CAAiBC,UADV;AAEZC,IAAAA,IAAI,EAAGlB,SAAS,CAACmB,MAAV,CAAiBF,UAFZ;AAGZG,IAAAA,KAAK,EAAGpB,SAAS,CAACmB,MAAV,CAAiBF,UAHb;AAIZI,IAAAA,WAAW,EAAErB,SAAS,CAACmB,MAAV,CAAiBF,UAJlB;AAKZK,IAAAA,KAAK,EAAGtB,SAAS,CAACgB,MAAV,CAAiBC,UALb;AAMZM,IAAAA,SAAS,EAAGvB,SAAS,CAACgB,MAAV,CAAiBC,UANjB;AAOZO,IAAAA,MAAM,EAAGxB,SAAS,CAACgB,MAAV,CAAiBC;AAPd,GAAhB,CADO,EAUTA;AAXuB,CAA7B;;AAcA,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHtB,IAAAA,QAAQ,EAAEsB,KAAK,CAACtB;AADb,GAAP;AAGH,CAJD;;AAMA,MAAMuB,kBAAkB,GAAG,CAACC,QAAD,EAAWpB,OAAX,KAAuB;AAC9C,SAAO;AACHqB,IAAAA,WAAW,EAAGrB,OAAD,IAAa;AACtBoB,MAAAA,QAAQ,CAAC3B,YAAY,CAACO,OAAD,EAAU,CAAV,CAAb,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAeX,OAAO,CAAC4B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,gBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Products from \"./../components/Products\";\nimport Product from \"./../components/Product\";\nimport PropTypes from \"prop-types\";\nimport { actAddToCart } from \"./../actions/index\";\n\nclass ProductContainer extends Component {\n    render() {\n        var { products } = this.props;\n        return (\n            <Products>\n                {this.showProduct(products)}\n            </Products>\n        );\n    }\n    showProduct = (products) => {\n        var result = null;\n        if (products.length > 0) {\n            result = products.map((product, index) => {\n                return <Product key={index} product={product}/>\n            });\n        }\n        return result;\n    }\n}\n\nProductContainer.propTypes = {\n    products : PropTypes.arrayOf(\n        PropTypes.shape({\n            id : PropTypes.number.isRequired,\n            name : PropTypes.string.isRequired,\n            image : PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            price : PropTypes.number.isRequired,\n            inventory : PropTypes.number.isRequired,\n            rating : PropTypes.number.isRequired\n        })\n    ).isRequired\n}\n\nconst mapStateToProps = state => {\n    return {\n        products: state.products\n    }\n}\n\nconst mapDispatchToProps = (dispatch, product) => {\n    return {\n        onAddToCart :(product) => {\n            dispatch(actAddToCart(product, 1));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductContainer);\n"]},"metadata":{},"sourceType":"module"}