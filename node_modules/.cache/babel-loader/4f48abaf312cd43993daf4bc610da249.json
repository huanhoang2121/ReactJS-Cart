{"ast":null,"code":"import * as types from \"./../constants/ActionType\";\nvar data = JSON.parse(localStorage.getItem(\"CART\"));\nvar initialState = data ? data : [];\n\nconst reducer = (state = initialState, action) => {\n  var product = action.product,\n      quantity = action.quantity;\n\n  switch (action.type) {\n    case types.ADD_TO_CARD:\n      var index = findProductInCart(state, product);\n\n      if (index !== -1) {\n        state[index].quantity += quantity;\n      } else {\n        state.push({\n          product,\n          quantity\n        });\n      }\n\n      localStorage.setItem(\"CART\", JSON.stringify(state));\n      return [...state];\n\n    case types.DELETE_PRODUCT_IN_CARD:\n    default:\n      return [...state];\n  }\n};\n\nvar findProductInCart = (carts, product) => {\n  var index = -1;\n\n  if (carts.length > 0) {\n    for (var i = 0; i < carts.length; i++) {\n      if (carts[i].product.id === product.id) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/dev/Documents/ReactJS-Cart/src/reducers/carts.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","reducer","state","action","product","quantity","type","ADD_TO_CARD","index","findProductInCart","push","setItem","stringify","DELETE_PRODUCT_IN_CARD","carts","length","i","id"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAAA,MACxCC,OADwC,GAClBD,MADkB,CACxCC,OADwC;AAAA,MAC/BC,QAD+B,GAClBF,MADkB,CAC/BE,QAD+B;;AAE9C,UAAQF,MAAM,CAACG,IAAf;AACI,SAAKZ,KAAK,CAACa,WAAX;AACI,UAAIC,KAAK,GAAGC,iBAAiB,CAACP,KAAD,EAAQE,OAAR,CAA7B;;AACA,UAAGI,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZN,QAAAA,KAAK,CAACM,KAAD,CAAL,CAAaH,QAAb,IAAyBA,QAAzB;AACH,OAFD,MAEM;AACFH,QAAAA,KAAK,CAACQ,IAAN,CAAW;AACPN,UAAAA,OADO;AAEPC,UAAAA;AAFO,SAAX;AAIH;;AACDP,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AAEJ,SAAKR,KAAK,CAACmB,sBAAX;AACA;AACI,aAAO,CAAC,GAAGX,KAAJ,CAAP;AAhBR;AAkBH,CApBD;;AAqBA,IAAIO,iBAAiB,GAAG,CAACK,KAAD,EAAQV,OAAR,KAAoB;AACxC,MAAII,KAAK,GAAG,CAAC,CAAb;;AACA,MAAIM,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AAClB,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACC,MAArB,EAA6BC,CAAC,EAA9B,EAAiC;AAC7B,UAAGF,KAAK,CAACE,CAAD,CAAL,CAASZ,OAAT,CAAiBa,EAAjB,KAAwBb,OAAO,CAACa,EAAnC,EAAsC;AAClCT,QAAAA,KAAK,GAAGQ,CAAR;AACA;AACH;AACJ;AACJ;;AACD,SAAOR,KAAP;AACH,CAXD;;AAaA,eAAeP,OAAf","sourcesContent":["import * as types from \"./../constants/ActionType\";\nvar data = JSON.parse(localStorage.getItem(\"CART\"));\nvar initialState = data ? data : [];\n\nconst reducer = (state = initialState, action) => {\n    var { product, quantity } = action;\n    switch (action.type) {\n        case types.ADD_TO_CARD:\n            var index = findProductInCart(state, product);\n            if(index !== -1){\n                state[index].quantity += quantity;\n            }else {\n                state.push({\n                    product,\n                    quantity\n                });\n            }\n            localStorage.setItem(\"CART\", JSON.stringify(state));\n            return [...state];\n\n        case types.DELETE_PRODUCT_IN_CARD:\n        default:\n            return [...state];\n    }\n}\nvar findProductInCart = (carts, product) => {\n    var index = -1;\n    if (carts.length > 0) {\n        for(var i=0; i<carts.length; i++){\n            if(carts[i].product.id === product.id){\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}