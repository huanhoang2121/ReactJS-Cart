{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/shoping-cart/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Carts from \"./../components/Carts\";\nimport PropTypes from \"prop-types\";\n\nclass CartContainer extends Component {\n  render() {\n    var cart = this.props.cart;\n    console.log(cart);\n    return React.createElement(Carts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, this.showCart(cart));\n  }\n\n  showProduct(products) {\n    var result = null;\n\n    if (products.length > 0) {\n      result = products.map((product, index) => {\n        return React.createElement(Product, {\n          key: index,\n          product: product,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        });\n      });\n    }\n\n    return result;\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nexport default connect(mapStateToProps, null)(CartContainer);","map":{"version":3,"sources":["/home/dev/Documents/shoping-cart/src/containers/CartContainer.js"],"names":["React","Component","connect","Carts","PropTypes","CartContainer","render","cart","props","console","log","showCart","showProduct","products","result","length","map","product","index","propTypes","arrayOf","shape","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAClCK,EAAAA,MAAM,GAAG;AAAA,QACCC,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAELE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKI,QAAL,CAAcJ,IAAd,CADL,CADJ;AAKH;;AACDK,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,QAAIC,MAAM,GAAG,IAAb;;AACA,QAAID,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;AACrBD,MAAAA,MAAM,GAAGD,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACtC,eAAO,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,KAAd;AAAqB,UAAA,OAAO,EAAED,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFQ,CAAT;AAGH;;AACD,WAAOH,MAAP;AACH;;AAlBiC;;AAqBtCT,aAAa,CAACc,SAAd,GAA0B;AACtBZ,EAAAA,IAAI,EAAEH,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,KAAV,CAAgB;AACpCJ,IAAAA,OAAO,EAAEb,SAAS,CAACiB,KAAV,CAAgB;AACrBC,MAAAA,EAAE,EAAGlB,SAAS,CAACmB,MAAV,CAAiBC,UADD;AAErBC,MAAAA,IAAI,EAAGrB,SAAS,CAACsB,MAAV,CAAiBF,UAFH;AAGrBG,MAAAA,KAAK,EAAGvB,SAAS,CAACsB,MAAV,CAAiBF,UAHJ;AAIrBI,MAAAA,WAAW,EAAExB,SAAS,CAACsB,MAAV,CAAiBF,UAJT;AAKrBK,MAAAA,KAAK,EAAGzB,SAAS,CAACmB,MAAV,CAAiBC,UALJ;AAMrBM,MAAAA,SAAS,EAAG1B,SAAS,CAACmB,MAAV,CAAiBC,UANR;AAOrBO,MAAAA,MAAM,EAAG3B,SAAS,CAACmB,MAAV,CAAiBC;AAPL,KAAhB,EAQNA,UATiC;AAUpCQ,IAAAA,QAAQ,EAAE5B,SAAS,CAACmB,MAAV,CAAiBC;AAVS,GAAhB,CAAlB,EAWFA;AAZkB,CAA1B;;AAeA,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH3B,IAAAA,IAAI,EAAE2B,KAAK,CAAC3B;AADT,GAAP;AAGH,CAJD;;AAMA,eAAeL,OAAO,CAAC+B,eAAD,EAAkB,IAAlB,CAAP,CAA+B5B,aAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Carts from \"./../components/Carts\";\nimport PropTypes from \"prop-types\";\n\nclass CartContainer extends Component {\n    render() {\n        var { cart } = this.props;\n        console.log(cart);\n        return (\n            <Carts>\n                {this.showCart(cart)}\n            </Carts>\n        );\n    }\n    showProduct(products) {\n        var result = null;\n        if (products.length > 0) {\n            result = products.map((product, index) => {\n                return <Product key={index} product={product}/>\n            });\n        }\n        return result;\n    }\n}\n\nCartContainer.propTypes = {\n    cart: PropTypes.arrayOf(PropTypes.shape({\n        product: PropTypes.shape({\n            id : PropTypes.number.isRequired,\n            name : PropTypes.string.isRequired,\n            image : PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            price : PropTypes.number.isRequired,\n            inventory : PropTypes.number.isRequired,\n            rating : PropTypes.number.isRequired    \n        }).isRequired,\n        quantity: PropTypes.number.isRequired\n    })).isRequired\n}\n\nconst mapStateToProps = state => {\n    return {\n        cart: state.cart\n    }\n}\n\nexport default connect(mapStateToProps, null)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}