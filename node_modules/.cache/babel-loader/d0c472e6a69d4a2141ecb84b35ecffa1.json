{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/ReactJS-Cart/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Carts from \"./../components/Carts\";\nimport Cart from \"./../components/Cart\";\nimport CartResult from \"./../components/CartResult\";\nimport * as Message from \"./../constants/Message\";\nimport PropTypes from \"prop-types\";\nimport { actDeleteProductInCart, actChangeMessage } from '../actions';\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCart = carts => {\n      var _this$props = this.props,\n          onDeleteProductInCart = _this$props.onDeleteProductInCart,\n          onChangeMessage = _this$props.onChangeMessage;\n      var result = React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, Message.MSG_CART_EMPTY));\n\n      if (carts.length > 0) {\n        result = carts.map((cart, index) => {\n          return React.createElement(Cart, {\n            key: index,\n            cart: cart,\n            onDeleteProductInCart: onDeleteProductInCart,\n            onChangeMessage: onChangeMessage,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          });\n        });\n      }\n\n      return result;\n    };\n\n    this.showTotal = carts => {\n      var result = null;\n\n      if (carts.length > 0) {\n        result = React.createElement(CartResult, {\n          carts: carts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    var carts = this.props.carts;\n    return React.createElement(Carts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.showCart(carts), this.showTotal(carts));\n  }\n\n}\n\nCartContainer.propTypes = {\n  carts: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    carts: state.carts\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onDeleteProductInCart: product => {\n      dispatch(actDeleteProductInCart(product));\n    },\n    onChangeMessage: message => {\n      dispatch(actChangeMessage(message));\n    },\n    onUpdateProductInCart: (product, quantity) => {\n      dispatch(actChangeMessage(product, quantity));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["/home/dev/Documents/ReactJS-Cart/src/containers/CartContainer.js"],"names":["React","Component","connect","Carts","Cart","CartResult","Message","PropTypes","actDeleteProductInCart","actChangeMessage","CartContainer","showCart","carts","props","onDeleteProductInCart","onChangeMessage","result","MSG_CART_EMPTY","length","map","cart","index","showTotal","render","propTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","mapStateToProps","state","mapDispatchToProps","dispatch","message","onUpdateProductInCart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Carts from \"./../components/Carts\";\nimport Cart from \"./../components/Cart\";\nimport CartResult from \"./../components/CartResult\";\nimport * as Message from \"./../constants/Message\";\nimport PropTypes from \"prop-types\";\nimport { actDeleteProductInCart, actChangeMessage } from '../actions';\n\nclass CartContainer extends Component {\n    render() {\n        var { carts } = this.props;\n        return (\n            <Carts>\n                {this.showCart(carts)}\n                {this.showTotal(carts)}\n            </Carts>\n        );\n    }\n    showCart = (carts) => {\n        var { onDeleteProductInCart, onChangeMessage } = this.props;\n\n        var result = <tr>\n            <td>\n                {Message.MSG_CART_EMPTY}\n            </td>\n        </tr>;\n        if (carts.length > 0) {\n            result = carts.map((cart, index) => {\n                return (\n                    <Cart\n                        key={index}\n                        cart={cart}\n                        onDeleteProductInCart={onDeleteProductInCart}\n                        onChangeMessage={onChangeMessage}\n                    />\n                )\n            });\n        }\n        return result;\n    }\n    showTotal = (carts) => {\n        var result = null;\n        if (carts.length > 0) {\n            result = <CartResult carts={carts} />\n        }\n        return result;\n    }\n}\n\nCartContainer.propTypes = {\n    carts: PropTypes.arrayOf(PropTypes.shape({\n        product: PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            price: PropTypes.number.isRequired,\n            inventory: PropTypes.number.isRequired,\n            rating: PropTypes.number.isRequired\n        }).isRequired,\n        quantity: PropTypes.number.isRequired\n    })).isRequired\n}\n\nconst mapStateToProps = state => {\n    return {\n        carts: state.carts\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onDeleteProductInCart: (product) => {\n            dispatch(actDeleteProductInCart(product));\n        },\n        onChangeMessage: (message) => {\n            dispatch(actChangeMessage(message));\n        },\n        onUpdateProductInCart: (product, quantity) => {\n            dispatch(actChangeMessage(product, quantity));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}