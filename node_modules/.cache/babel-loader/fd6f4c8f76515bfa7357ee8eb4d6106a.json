{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/ReactJS-Cart/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Carts from \"./../components/Carts\";\nimport Cart from \"./../components/Cart\";\nimport CartResult from \"./../components/CartResult\";\nimport * as Message from \"./../constants/Message\";\nimport PropTypes from \"prop-types\";\nimport { actDeleteProductInCart } from '../actions';\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCart = carts => {\n      var result = React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, Message.MSG_CART_EMPTY));\n\n      if (carts.length > 0) {\n        result = carts.map((cart, index) => {\n          return React.createElement(Cart, {\n            key: index,\n            cart: cart,\n            onDeleteProductInCart: onDeleteProductInCart,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          });\n        });\n      }\n\n      return result;\n    };\n\n    this.showTotal = carts => {\n      var result = null;\n\n      if (carts.length > 0) {\n        result = React.createElement(CartResult, {\n          carts: carts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    var _this$props = this.props,\n        carts = _this$props.carts,\n        onDeleteProductInCart = _this$props.onDeleteProductInCart;\n    return React.createElement(Carts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.showCart(carts), this.showTotal(carts));\n  }\n\n}\n\nCartContainer.propTypes = {\n  carts: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }).isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    carts: state.carts\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onDeleteProductInCart: product => {\n      dispatch(actDeleteProductInCart(product));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["/home/dev/Documents/ReactJS-Cart/src/containers/CartContainer.js"],"names":["React","Component","connect","Carts","Cart","CartResult","Message","PropTypes","actDeleteProductInCart","CartContainer","showCart","carts","result","MSG_CART_EMPTY","length","map","cart","index","onDeleteProductInCart","showTotal","render","props","propTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","description","price","inventory","rating","quantity","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Carts from \"./../components/Carts\";\nimport Cart from \"./../components/Cart\";\nimport CartResult from \"./../components/CartResult\";\nimport * as Message from \"./../constants/Message\";\nimport PropTypes from \"prop-types\";\nimport { actDeleteProductInCart } from '../actions';\n\nclass CartContainer extends Component {\n    render() {\n        var { carts,onDeleteProductInCart } = this.props;\n        return (\n            <Carts>\n                {this.showCart(carts)}\n                {this.showTotal(carts)}\n            </Carts>\n        );\n    }\n    showCart = (carts) => {\n        var result = <tr>\n            <td>\n                {Message.MSG_CART_EMPTY}\n            </td>\n        </tr>;\n        if (carts.length > 0) {\n            result = carts.map((cart, index) => {\n                return (\n                    <Cart\n                        key={index}\n                        cart={cart}\n                        onDeleteProductInCart={onDeleteProductInCart}\n                    />\n                )\n            });\n        }\n        return result;\n    }\n    showTotal = (carts) => {\n        var result = null;\n        if (carts.length > 0) {\n            result = <CartResult carts={carts} />\n        }\n        return result;\n    }\n}\n\nCartContainer.propTypes = {\n    carts: PropTypes.arrayOf(PropTypes.shape({\n        product: PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            price: PropTypes.number.isRequired,\n            inventory: PropTypes.number.isRequired,\n            rating: PropTypes.number.isRequired\n        }).isRequired,\n        quantity: PropTypes.number.isRequired\n    })).isRequired\n}\n\nconst mapStateToProps = state => {\n    return {\n        carts: state.carts\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onDeleteProductInCart :(product) => {\n            dispatch(actDeleteProductInCart(product));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}